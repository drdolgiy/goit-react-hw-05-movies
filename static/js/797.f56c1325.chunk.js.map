{"version":3,"file":"static/js/797.f56c1325.chunk.js","mappings":"iRAIaA,EAAa,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,GAAKJ,EAIL,GAAIA,EAAJ,CAAY,IACOK,EADR,mCACP,8GAEqBC,EAAAA,EAAAA,IAAiBN,GAFtC,OAEMO,EAFN,OAGAC,QAAQC,IAAIF,GACZX,EAAQW,GAJR,yGADO,qDAWPF,YAGD,CAACL,IAkBZ,OACQ,4BACI,kBAAMU,SAbO,SAAAC,GAGjB,GAFAA,EAAMC,iBAEgB,KAAlBnB,EAAOoB,OACP,OAAOC,MAAM,+BAGjBf,EAAgB,CAACC,MAAOP,IACxBC,EAAU,KAKN,WACI,kBAAOqB,SAnBE,SAAAJ,GACjB,IAAMK,EAAcL,EAAMM,OAAOC,MAAMC,cACvCzB,EAAUsB,IAkBEE,MAAOzB,EACP2B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEhB,mBAAQH,KAAK,SAAb,uBAEHzB,IAAS,wBACLA,EAAK6B,KAAI,SAAAC,GAAI,OACV,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAM3B,GAA/C,SAA4DuB,EAAKK,SAD5DL,EAAKE","sources":["pages/MoviesPage.jsx"],"sourcesContent":["import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesByQuery } from 'services/movieApi';\n\nexport const MoviesPage = () => {\n    const [search, setSearch] = useState(\"\");\n    const [data, setData] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    const query = searchParams.get(\"query\");\n    const location = useLocation();\n\n    useEffect(() => { \n        if (!query) {\n            return\n        };\n        \n        if (query) {\n            async function fetchMoviesByQuery() {\n        try {\n            const movies = await getMoviesByQuery(query);\n            console.log(movies);\n            setData(movies);    \n            \n            } catch (error) {\n                \n            }\n        }\n            fetchMoviesByQuery();\n            return\n    }        \n        }, [query])\n        \n    const handleChange = event => {\n        const searchQuery = event.target.value.toLowerCase();\n        setSearch(searchQuery);       \n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (search.trim() === '') {\n            return alert('please, enter search query!');\n        };\n \n        setSearchParams({query: search});\n        setSearch('');\n    };\n \nreturn(\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input onChange={handleChange}\n                    value={search}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n            {data && (<ul>\n                {data.map(item => (\n                    <li key={item.id}>\n                        <Link to={`/movies/${item.id}`} state={{ from: location }}>{item.title}</Link>\n                    </li>\n                ))}\n            </ul>)}        \n        </div>\n    )    \n};\n"],"names":["MoviesPage","useState","search","setSearch","data","setData","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchMoviesByQuery","getMoviesByQuery","movies","console","log","onSubmit","event","preventDefault","trim","alert","onChange","searchQuery","target","value","toLowerCase","type","autoComplete","autoFocus","placeholder","map","item","to","id","state","from","title"],"sourceRoot":""}