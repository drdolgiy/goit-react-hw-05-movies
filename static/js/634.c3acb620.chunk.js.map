{"version":3,"file":"static/js/634.c3acb620.chunk.js","mappings":"8MAEaA,E,QAAUC,EAAAA,IAAH,sG,SCCPC,EAAS,WAClB,OACI,SAACF,EAAD,WACI,SAAC,KAAD,CAAOG,MAAM,UAAUC,OAAQ,GAAIC,MAAO,Q,mECFzCC,EAAW,WACpB,MCF0B,WAC1B,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACID,GAAW,GADf,mBAG6BE,EAAAA,EAAAA,MAH7B,OAGcL,EAHd,OAIQC,EAAUD,GAJlB,yEAOQG,GAAW,GAPnB,6EADY,uBAAC,WAAD,wBAWZG,KACD,IACI,CAAEN,OAAAA,EAAQE,QAAAA,GDfWK,GAApBP,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,QAEhB,OACI,6BACI,2CAGCA,IAAW,SAACR,EAAD,KACZ,wBACKM,EAAOQ,KAAI,SAAAC,GAAK,OAAI,yBACjB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADdH,EAAME","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/HomePage/HomePage.jsx","hooks/useFetchMovies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Loading = styled.div`\n\n// display: flex;\n//     justify-content: left;\n//     margin-top: 50px;\n`","import { Rings } from \"react-loader-spinner\";\nimport {Loading} from \"../Loader/Loader.styled\"\n\nexport const Loader = () => {\n    return (\n        <Loading>\n            <Rings color=\"#303f9f\" height={80} width={80}  />\n        </Loading>\n        \n    )\n};","import { Loader } from \"components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { useFetchMovies } from \"hooks/useFetchMovies\";\n \nexport const HomePage = () => {    \n    const { movies, loading } = useFetchMovies();\n    \n    return (        \n        <main>\n            <h1>\n                Trending today\n            </h1>\n            {loading && <Loader/>}\n            <ul>\n                {movies.map(movie => <li key={movie.id}>\n                    <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n                </li>)}\n            </ul>\n       </main>        \n    )\n};","import {useState, useEffect} from \"react\"\nimport { getMovies } from \"services/movieApi\"\n\nexport const useFetchMovies = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchMovies() {\n            setLoading(true);\n            try {\n                const movies = await getMovies();\n                setMovies(movies);\n            } catch (error) {\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchMovies();\n    }, []);\n    return { movies, loading }\n};"],"names":["Loading","styled","Loader","color","height","width","HomePage","useState","movies","setMovies","loading","setLoading","useEffect","getMovies","fetchMovies","useFetchMovies","map","movie","to","id","title"],"sourceRoot":""}